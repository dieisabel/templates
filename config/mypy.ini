# Configuration for mypy - python type cheching tool
# For reference see https://mypy.readthedocs.io/en/stable/config_file.html
[mypy]

# Specify files and directories to check
# Feel free to modify this at your needs
files = src/**/*.py

# Follow imports and type check all top level code but suppress any error message
follow_imports = silent

# Suppress error messages about imports that cannot be resolved
# Useful if you use modules without type hints
ignore_missing_imports = True

# Disallow untyped function definitions
disallow_untyped_defs = True

# Disallow incomplete function definitions
disallow_incomplete_defs = True

# Check the body of every function, regardless of whether it has type annotations
check_untyped_defs = True

# Force to explicitly indicate that type can be None
# Example:
#   def foo(x: int = None) -> None: ...   # Error
#   def foo(x: Optional[int] = None) -> None: ...    # Good
no_implicit_optional = True

# Threat None as non-compatible with every type
strict_optional = True

# Prettify output
pretty = True

# Show error codes like [arg-type] or [return-value]
# See https://mypy.readthedocs.io/en/stable/error_code_list.html#error-code-list for
# a list of error codes
show_error_codes = True

# Prefix each error with the relevant context
show_error_context = True

# Warn about ignores which are not effective
warn_unused_ignores = True

# Warn about per-module sections that do not match any processed files
warn_unused_configs = True

# Don't threat imported modules automatically as exported
implicit_reexport = False
